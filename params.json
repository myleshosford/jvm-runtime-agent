{"name":"Jvm-runtime-agent","tagline":"Java runtime agent that uses bytecode modification to print out method calls during runtime. Useful for application penetration testing.","body":"Java Instrumentation Agent\r\n=================\r\n\r\nJava agent that uses bytecode modification to print out method calls during runtime. \r\n\r\nUseful for application penetration testing and tracing method calls. I have used it in the past to quickly determine what methods are called on button presses via the GUI for example.\r\n\r\n![Alt text](../../main.png)\r\n\r\nFeatures: \r\n\r\nUses class blacklisting so you can ignore default SDK or classes you are not interested in.\r\n\r\nThe simple transformer injects into each method call and prints the method name and its parameters.\r\n\r\nCanbe loaded at runtime or during application launch (java -javaagent:agent.jar Application.jar)\r\n\r\n![Alt text](/main2.png)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}